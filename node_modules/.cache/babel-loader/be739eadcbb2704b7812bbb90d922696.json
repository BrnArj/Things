{"ast":null,"code":"var _jsxFileName = \"/home/ridolfi/Documentos/projetos-pessoais/cilma-wall/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport WeitherCard from './components/weitherCard';\nimport Navbar from './components/navBar';\nimport mock from '../src/services/mock';\nimport React from 'react';\nimport Cloudy from '../src/images/cloudy.jpg';\nimport Rainy from '../src/images/rainy.jpg';\nimport Sunny from '../src/images/sunny.jpg';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let weather = new Array();\n  let weatherOsasco = new Array();\n  let weatherSaoPaulo = new Array();\n  weatherOsasco.push(...mock[0].weather);\n  weatherSaoPaulo.push(...mock[1].weather);\n  mock.map(data => weather.push(...data.weather));\n  const [time, setTime] = React.useState('');\n  let date = new Date();\n  let hour = date.getHours();\n  React.useEffect(() => {\n    if (hour >= 0 && hour <= 12) {\n      setTime('morning');\n    }\n\n    if (hour >= 12 && hour <= 18) {\n      setTime('evening');\n    }\n\n    if (hour >= 18 && hour <= 24) {\n      setTime('night');\n    }\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${time}`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"states\",\n      children: [weatherOsasco.map((data, key) => /*#__PURE__*/_jsxDEV(WeitherCard, {\n        date: data.date,\n        text: data.text,\n        tempMax: data.temperature.max,\n        tempMin: data.temperature.min,\n        precipitation: data.rain.precipitation,\n        probability: data.rain.probability,\n        locale: 'Osasco',\n        imageWeather: data.rain.probability >= 50 ? Rainy : data.rain.probability < 50 && data.rain.probability >= 30 ? Cloudy : data.rain.probability <= 30 ? Sunny : null\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 43\n      }, this)), weatherSaoPaulo.map((data, key) => /*#__PURE__*/_jsxDEV(WeitherCard, {\n        date: data.date,\n        text: data.text,\n        tempMax: data.temperature.max,\n        tempMin: data.temperature.min,\n        precipitation: data.rain.precipitation,\n        probability: data.rain.probability,\n        locale: 'SÃ£o Paulo',\n        imageWeather: data.rain.probability >= 50 ? Rainy : data.rain.probability < 50 && data.rain.probability >= 30 ? Cloudy : data.rain.probability <= 30 ? Sunny : null\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PsMgnLgzzQiamQWS0F3M3yb0/nk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ridolfi/Documentos/projetos-pessoais/cilma-wall/src/App.js"],"names":["WeitherCard","Navbar","mock","React","Cloudy","Rainy","Sunny","styled","App","weather","Array","weatherOsasco","weatherSaoPaulo","push","map","data","time","setTime","useState","date","Date","hour","getHours","useEffect","key","text","temperature","max","min","rain","precipitation","probability"],"mappings":"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","sourcesContent":["import './App.scss';\nimport WeitherCard from './components/weitherCard'\nimport Navbar from './components/navBar'\nimport mock from '../src/services/mock'\nimport React from 'react'\nimport Cloudy from '../src/images/cloudy.jpg'\nimport Rainy from '../src/images/rainy.jpg'\nimport Sunny from '../src/images/sunny.jpg'\nimport styled from 'styled-components'\n\n\nfunction App() {\n  let weather = new Array();\n  let weatherOsasco = new Array();\n  let weatherSaoPaulo = new Array();\n  weatherOsasco.push(...mock[0].weather)\n  weatherSaoPaulo.push(...mock[1].weather)\n  mock.map((data) => weather.push(...data.weather))\n\n  const [time, setTime] = React.useState('')\n  let date = new Date()\n  let hour = date.getHours()\n\n  React.useEffect(() => {\n      if(hour >= 0 && hour <= 12){\n          setTime('morning')\n      }if(hour >= 12 && hour <= 18){\n          setTime('evening')\n      }if(hour >= 18 && hour <= 24){\n          setTime('night')\n      }\n  }, [time])\n\n  return (\n    <div className={`App ${time}`}>\n      <Navbar />\n      <div className=\"states\">\n        {weatherOsasco.map((data, key) => <WeitherCard \n          key={key} \n          date={data.date} \n          text={data.text} \n          tempMax={data.temperature.max} \n          tempMin={data.temperature.min}\n          precipitation={data.rain.precipitation}\n          probability={data.rain.probability}\n          locale={'Osasco'}\n          imageWeather = {(data.rain.probability >= 50) ? Rainy : (data.rain.probability < 50 && data.rain.probability >= 30) ? Cloudy : (data.rain.probability <= 30) ? Sunny : null}\n        />)}\n        {weatherSaoPaulo.map((data, key) => <WeitherCard \n          key={key} \n          date={data.date} \n          text={data.text} \n          tempMax={data.temperature.max} \n          tempMin={data.temperature.min}\n          precipitation={data.rain.precipitation}\n          probability={data.rain.probability}\n          locale={'SÃ£o Paulo'}\n          imageWeather = {(data.rain.probability >= 50) ? Rainy : (data.rain.probability < 50 && data.rain.probability >= 30) ? Cloudy : (data.rain.probability <= 30) ? Sunny : null}\n        />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}